{"version":3,"sources":["../../src/pages/signup2/signup2.module.ts","../../src/pages/signup2/signup2.ts","../../src/validators/age.ts","../../src/validators/email.ts"],"names":[],"mappings":"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","file":"0.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\n\r\nimport { SignupPage2} from './signup2';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SignupPage2,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(SignupPage2),\r\n    TranslateModule.forChild()\r\n  ],\r\n  exports: [\r\n    SignupPage2\r\n  ]\r\n})\r\nexport class SignupPageModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/signup2/signup2.module.ts","import {Component, ViewChild} from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { IonicPage, NavController, ToastController } from 'ionic-angular';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { User } from '../../providers';\r\nimport { signup1 } from '../';\r\nimport {signup2} from \"../\";\r\nimport { AgeValidator } from  '../../validators/age';\r\nimport { EmailValidator } from  '../../validators/email';\r\n\r\nimport Hashes from \"jshashes\";\r\n\r\n@IonicPage()\r\n@Component({\r\n  selector: 'page-signup',\r\n  templateUrl: 'signup2.html'\r\n})\r\nexport class SignupPage2 {\r\n  // The account fields for the login form.\r\n  // If you're using the username field with or without email, make\r\n  // sure to add it to the type\r\n  @ViewChild('signupSlider') signupSlider: any;\r\n  slideOneForm: FormGroup;\r\n  slideTwoForm: FormGroup;\r\n\r\n  submitAttempt: boolean = false;\r\n  constructor(public navCtrl: NavController, public formBuilder: FormBuilder) {\r\n\r\n    this.slideOneForm = formBuilder.group({\r\n      firstName: ['', Validators.compose([Validators.maxLength(30), Validators.pattern('[a-zA-Z ]*'), Validators.required])],\r\n      lastName: ['', Validators.compose([Validators.maxLength(30), Validators.pattern('[a-zA-Z ]*'), Validators.required])],\r\n      age: ['', AgeValidator.isValid]\r\n    });\r\n\r\n    this.slideTwoForm = formBuilder.group({\r\n      email: ['', Validators.compose([Validators.required, Validators.pattern('[a-zA-Z]*')]), EmailValidator.checkEmail],\r\n      privacy: ['', Validators.required],\r\n      bio: ['']\r\n    });\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  next(){\r\n    this.signupSlider.slideNext();\r\n  }\r\n\r\n  prev(){\r\n    this.signupSlider.slidePrev();\r\n  }\r\n\r\n  save(){\r\n\r\n    this.submitAttempt = true;\r\n\r\n    if(!this.slideOneForm.valid){\r\n      this.signupSlider.slideTo(0);\r\n    }\r\n    else if(!this.slideTwoForm.valid){\r\n      this.signupSlider.slideTo(1);\r\n    }\r\n    else {\r\n      console.log(\"success!\")\r\n      console.log(this.slideOneForm.value);\r\n      console.log(this.slideTwoForm.value);\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  account: {\r\n    title: string,\r\n    address: string,\r\n    streetNum: string,\r\n    zipCode: string,\r\n    city: string\r\n  } = {\r\n    title: 'Mr.',\r\n    address: 'Vermont avenue',\r\n    streetNum: '225',\r\n    zipCode: '60385',\r\n    city: \"Sebring\"\r\n  };\r\n\r\n  // Our translated text strings\r\n  private signupErrorString: string;\r\n/*\r\n  constructor(public navCtrl: NavController,\r\n\r\n              public toastCtrl: ToastController,\r\n              public translateService: TranslateService) {\r\n\r\n    this.translateService.get('SIGNUP_ERROR').subscribe((value) => {\r\n      this.signupErrorString = value;\r\n    })\r\n  }\r\n/*\r\n  doSignup() {\r\n    // Attempt to login in through our User service\r\n    let tempAccount = JSON.parse(JSON.stringify(this.account));\r\n    tempAccount.password = new Hashes.SHA512().hex(tempAccount.password);\r\n    this.user.signup(JSON.stringify(tempAccount)).subscribe((resp : any) => {\r\n      console.log(resp);\r\n      if (resp.status === \"success\") {\r\n        console.log(\"Successfully created account\")\r\n      } else {\r\n        console.log(\"email already existed\")\r\n      }\r\n    }, (err) => {\r\n\r\n      //this.navCtrl.push(MainPage);\r\n\r\n      // Unable to sign up\r\n      let toast = this.toastCtrl.create({\r\n        message: this.signupErrorString,\r\n        duration: 3000,\r\n        position: 'top'\r\n      });\r\n      toast.present();\r\n    });\r\n  }\r\n*/\r\n  forward() {\r\n    let promise = this.navCtrl.push(signup2,\r\n      {title: this.account.title,\r\n        address: this.account.address,\r\n        streetNum: this.account.streetNum,\r\n        zipCode: this.account.zipCode,\r\n        city: this.account.city\r\n      }\r\n\r\n\r\n    );\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/signup2/signup2.ts","import { FormControl } from '@angular/forms';\r\n\r\nexport class AgeValidator {\r\n\r\n  static isValid(control: FormControl): any {\r\n\r\n    if(isNaN(control.value)){\r\n      return {\r\n        \"not a number\": true\r\n      };\r\n    }\r\n\r\n    if(control.value % 1 !== 0){\r\n      return {\r\n        \"not a whole number\": true\r\n      };\r\n    }\r\n\r\n    if(control.value < 18){\r\n      return {\r\n        \"too young\": true\r\n      };\r\n    }\r\n\r\n    if (control.value > 120){\r\n      return {\r\n        \"Are you really that old? Seriously?\": true\r\n      };\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/validators/age.ts","import { FormControl } from '@angular/forms';\r\n\r\nexport class EmailValidator {\r\n\r\n  static checkEmail(control: FormControl): any {\r\n\r\n    return new Promise(resolve => {\r\n\r\n      //Fake a slow response from server\r\n\r\n      setTimeout(() => {\r\n        if(control.value.toLowerCase() === \"greg\"){\r\n\r\n          resolve({\r\n            \"email address already taken\": true\r\n          });\r\n\r\n        } else {\r\n          resolve(null);\r\n        }\r\n      }, 2000);\r\n\r\n    });\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/validators/email.ts"],"sourceRoot":""}